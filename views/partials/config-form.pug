.form-control
	form(id="golem-config-form" action="/s/run/" method="post")
		.form-group
			label(for="cpuSelect")
				svg.bi(width='16' height='16' fill='currentColor')
					use(xlink:href='/icons.svg#cpu')
				|CPUs
			select(name="cpuSelect" id="cpuSelect")
				option(value="1") 1
				option(selected="selected" value="2") 2
				option(value="4") 4
		.form-group
			label(for="ramSelect")
				svg.bi(width='16' height='16' fill='currentColor')
					use(xlink:href='/icons.svg#aspect-ratio')
				|RAM
			select(name="ramSelect" id="ramSelect")
				option(value="1") 1 GB
				option(selected="selected" value="2") 2 GB
				option(value="4") 4 GB
		.form-group
			label(for="discSelect")
				svg.bi(width='16' height='16' fill='currentColor')
					use(xlink:href='/icons.svg#hdd')
				|Disk
			select(name="discSelect" id="discSelect")
				option(selected="selected" value="4") 4 GB
				option(value="8") 8 GB
				option(value="16") 16 GB
		.form-group
			label(for="imageSelect")
				svg.bi(width='16' height='16' fill='currentColor')
					use(xlink:href='/icons.svg#disc')
				|Image
			select(name="imageSelect" id="imageSelect")
				option(selected="selected" value="0x5AzHrUJszd4MI2") Blender (0x5AzHrUJszd4MI2)
				option(value="S0CLDP4db6mlNaZh") Photos (S0CLDP4db6mlNaZh)
				option(value="sW66MDjOybWSyPwD") Math (sW66MDjOybWSyPwD)
		.form-group.no-border
			button(type="submit" value="Run" id="submit" class="btn")
				svg.bi(width='16' height='16' fill='currentColor')
					use(xlink:href='/icons.svg#play-fill')
				|Run

script.
	(function(w,d){
		document.addEventListener('submit', event => {
			// Prevent the default form submit
			event.preventDefault();
			slates.output.setValue('Starting...');
			// Store reference to form to make later code easier to read
			const form = event.target;
			// Post data using the Fetch API, wait for the promise object before we send it to the terminal
			fetch(form.action, {
				method: form.method,
				body: new URLSearchParams(new FormData(form))
			}).then(res => res.text()).then(text => {
				console.log("Success! " + JSON.stringify(text))
				//- This is on the window :/
				// ugh...I hope we don't have to do this shit for files but I'm afraid Codemirror only accepts strings.
				slates.output.setValue(`Starting...
				${JSON.stringify(text)}`.replace(/[\t]/g,''));
			}).catch(err => {
				// Error Handling...
				console.log('Error! I should appear after 1 second. ' + err);
			});
		});
	})(window,document);